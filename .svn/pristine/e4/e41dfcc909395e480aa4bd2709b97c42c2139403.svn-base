if(//condition)
{
  //Exécution des instructions si la condition est remplie
}
else
{
  //Exécution des instructions si la condition n'est pas remplie
}


int i = 10;
 
if (i < 0)
  System.out.println("le nombre est négatif");
else
  System.out.println("le nombre est positif");
  
  
  
  switch (/*Variable*/)
{
  case /*Argument*/:
    /*Action*/;
    break;        
  default:
    /*Action*/;             
}


int x = 10, y = 20;

int max = (x < y) ? (y < 10) ? y % 10 : y * 2 : x ; //Max vaut 40

//Pas très facile à lire…
//Vous pouvez entourer votre deuxième instruction ternaire par des parenthèses pour mieux voir :

max = (x < y) ? ((y < 10) ? y % 10 : y * 2) : x ; //Max vaut 40



Les conditions vous permettent de n'exécuter que certains morceaux de code.
Il existe plusieurs sortes de structures conditionnelles :
la structure if... elseif... else ;
la structure switch... case... default ;
la structure  ? :.

Vous pouvez mettre autant de comparaisons renvoyant un boolean que vous le souhaitez dans une condition.
Pour la structure switch, pensez à mettre les instructions break; si vous ne souhaitez exécuter qu'un 
seul bloc case.

Veillez à bien respecter la casse (majuscules et minuscules), car une déclaration de CHAR à la place de char
ou autre chose provoquera une erreur, tout comme une variable de type string à la place de String!


Très important : on ne peut faire du traitement arithmétique que sur des variables de même type sous 
peine de perdre de la précision lors du calcul. On ne s'amuse pas à diviser unintpar unfloat, ou pire, 
par un char! Ceci est valable pour tous les opérateurs arithmétiques et pour tous les types de variables 
numériques. Essayez de garder une certaine rigueur pour vos calculs arithmétiques.

Sachez aussi que vous pouvez tout à fait mettre des opérations dans un affichage, comme ceci :
System.out.print("Résultat = " + nbre1/nbre2);
(le « + » joue ici le rôle d'opérateur de concaténation) ; 
ceci vous permet d'économiser une variable et par conséquent de la mémoire.

Il existe des équivalents àintValue()pour les autres types numériques :floatValue(),doubleValue()…

Un package est un ensemble de classes. En fait, c'est un ensemble de dossiers et de sous-dossiers 
contenant une ou plusieurs classes, mais nous verrons ceci plus en détail lorsque nous ferons nos 
propres packages.

Il y a un type de variables primitives qui n'est pas pris en compte par la classe Scanner : 
il s'agit du type char.